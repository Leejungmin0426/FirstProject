<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.green.firstproject.user.UserMapper">

    <!-- 사용자 회원가입 -->
    <insert id="insertUser">
        INSERT INTO user (password, nickname, user_id, email, first_login)
        VALUES (#{password}, #{nickname}, #{userId}, #{email}, 1)
    </insert>

    <!--  이메일 중복체크 -->
    <select id="checkEmailDuplicates">
        SELECT COUNT(1) AS emailCount
        FROM user
        WHERE email = #{email}
    </select>

    <!--  유저 아이디 중복체크 -->
    <select id="checkUserIdDuplicates">
        SELECT COUNT(1) AS userIdCount
        FROM user
        WHERE user_id = #{userId}
    </select>

    <!-- 닉네임 중복체크 -->
    <select id="checkNicknameDuplicate">
        SELECT COUNT(1) AS nicknameCount
        FROM user
        WHERE nickname = #{nickname}
    </select>


    <!-- 1. 사용자 로그인 -->
    <select id="userSignIn">
        SELECT
        user_no AS userNo,
        password,
        nickname,
        user_id AS userId,
        profile_pic AS profilePic,
        first_login AS firstLogin,
        status_message AS userStatusMessage
        FROM user
        WHERE user_id = #{userId}
    </select>
    <!-- 2. 첫 로그인 여부 -->
    <update id="updateFirstLogin">
        UPDATE user SET first_login = false WHERE user_id = #{userId}
    </update>


    <select id="findUserIdByEmail">
        SELECT user_id AS userId
        FROM user
        WHERE email = #{email}
    </select>


    <!-- 사용자 정보 조회 -->
    <select id="selUserInfo">
        SELECT
        u2.email,
        u2.nickname,
        u2.status_message AS userStatusMessage,
        u2.profile_pic AS profilePic
        FROM user u1
        JOIN user u2
        ON u1.user_no = #{signedUserNo}
        WHERE u2.user_no = #{targetUserNo};
    </select>


    <!-- 비밀번호 업데이트 -->
    <update id="updatePassword">
        UPDATE user
        SET password = #{password}
        WHERE email = #{email}
    </update>



    <select id="findUserByEmail">
        SELECT *
        FROM user
        WHERE email = #{email}
    </select>


    <!-- 중복 체크 -->
    <select id="checkNicknameExists">
        SELECT
        COUNT(*) > 0
        FROM user
        WHERE nickname = #{nickname}
    </select>

    <!-- 유저 정보 업데이트 -->
    <update id="updUserProfile">
        UPDATE user
        SET
        nickname = #{nickname},
        status_message = #{statusMessage},
        profile_pic = #{profilePic}
        WHERE
        user_no = #{userNo}
    </update>

    <!-- 사용자 정보 조회 -->
    <select id="getUserInfo">
        SELECT
        email,
        nickname,
        status_message AS statusMessage,
        profile_pic AS profilePic
        FROM user
        WHERE user_no = #{signedUserNo}
    </select>

</mapper>